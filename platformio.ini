;PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
; default_envs = d1_mini
; default_envs = d1_mini_OTA
default_envs = d1_mini_pro
; default_envs = lolin_d32_pro
; default_envs = lolin_d32_pro_OTA
; default_envs = mhetesp32minikit

[common_env_data]
framework = arduino
; For USB update:
; upload_port=COM4

; For OTA update:
; Uncoment the upload protocol and select the port target
; upload_protocol = espota
; upload_port = iotdevice

;  To select ota password and port:
; upload_flags =
;     --auth=otapwd
;     --port=8266

; upload_port = IoLed.local
; upload_port = 192.168.1.242
; upload_port = iotbutton.lan

monitor_speed = 115200
upload_speed = 921600


lib_deps_base =
  PubSubClient

  https://github.com/paclema/WebConfigServer

  sparkfun/SparkFun SCD30 Arduino Library @ ^1.0.12
  mikalhart/TinyGPSPlus @ ^1.0.2
  plerup/EspSoftwareSerial @ ^6.12.7


build_flags =
  -w                          ; To remove compilation warnings
  -D USE_ASYNC_WEBSERVER      ; To use Async webserver defining cpp files:

  -D CONFIG_JSON_SIZE=4096    ; To define WebConfigServer max config.json size

  ; -D ENABLE_SERIAL_DEBUG    ; To enable Serial debug
  ; -D DEBUG_ESP_CORE         ; More debug levels here: https://docs.platformio.org/en/latest/platforms/espressif8266.html#debug-level
  ; -D DEBUG_ESP_WIFI
  ; -D DEBUG_ESP_OTA



[env:d1_mini]
platform = espressif8266
framework = ${common_env_data.framework}
board = d1_mini
monitor_speed = ${common_env_data.monitor_speed}
upload_speed = ${common_env_data.upload_speed}
lib_deps =
  ${common_env_data.lib_deps_base}

build_flags = ${common_env_data.build_flags}


[env:d1_mini_OTA]
platform = espressif8266
framework = ${common_env_data.framework}
board = d1_mini
monitor_speed = ${common_env_data.monitor_speed}
upload_speed = ${common_env_data.upload_speed}
lib_deps =
  ${common_env_data.lib_deps_base}

upload_protocol = espota
upload_port = iotdevice
upload_flags =
  --port=8266

build_flags = ${common_env_data.build_flags}


[env:d1_mini_pro]
platform = espressif8266
framework = ${common_env_data.framework}
board = d1_mini_pro
monitor_speed = ${common_env_data.monitor_speed}
upload_speed = ${common_env_data.upload_speed}
upload_port = COM4
monitor_port = COM4
lib_deps =
  ${common_env_data.lib_deps_base}

build_flags =
  ${common_env_data.build_flags}
  ; -Wl,-Teagle.flash.16m14m.ld

; For now we can use only the half of the 16MB with this partition schema:
board_build.ldscript = eagle.flash.8m6m.ld


[env:esp12e]
platform = espressif8266
framework = ${common_env_data.framework}
board = esp12e
monitor_speed = ${common_env_data.monitor_speed}
upload_speed = ${common_env_data.upload_speed}
lib_deps =
  ${common_env_data.lib_deps_base}

build_flags = ${common_env_data.build_flags}
upload_port = COM10
monitor_port = COM10


[env:esp07s]
platform = espressif8266
framework = ${common_env_data.framework}
board = esp07s
monitor_speed = ${common_env_data.monitor_speed}
upload_speed = ${common_env_data.upload_speed}
lib_deps =
  ${common_env_data.lib_deps_base}

build_flags = ${common_env_data.build_flags}
upload_port = COM10
monitor_port = COM10


[env:lolin_d32_pro]
platform = espressif32@3.2.0
board = lolin_d32
framework = ${common_env_data.framework}
platform_packages =
  ; framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#master
  framework-arduinoespressif32 @ https://github.com/paclema/arduino-esp32#lwip_enabled    ; Must use platform = espressif32@3.2.0
  toolchain-xtensa32@2.80400  ; LWIP needs toolchain-xtensa32 >= v8.4.0
board_build.mcu = esp32
board_build.f_cpu = 240000000L
monitor_speed = ${common_env_data.monitor_speed}
upload_speed = ${common_env_data.upload_speed}
lib_deps =
  ${common_env_data.lib_deps_base}

build_flags =
  ${common_env_data.build_flags}
  -DBOARD_HAS_PSRAM
  -mfix-esp32-psram-cache-issue

board_build.partitions = ./board_partitions/esp32/default_16MB.csv
; board_build.partitions = ./board_partitions/esp32/default.csv


[env:lolin_d32_pro_OTA]
platform = espressif32@3.2.0
board = lolin_d32
framework = ${common_env_data.framework}
platform_packages =
  ; framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#master
  framework-arduinoespressif32 @ https://github.com/paclema/arduino-esp32#lwip_enabled    ; Must use platform = espressif32@3.2.0
  toolchain-xtensa32@2.80400  ; LWIP needs toolchain-xtensa32 >= v8.4.0
board_build.mcu = esp32
board_build.f_cpu = 240000000L
monitor_speed = ${common_env_data.monitor_speed}
upload_speed = ${common_env_data.upload_speed}
lib_deps =
  ${common_env_data.lib_deps_base}

upload_protocol = espota
upload_port = iotdevice
upload_flags =
  --port=3232

build_flags =
  ${common_env_data.build_flags}
  -DBOARD_HAS_PSRAM
  -mfix-esp32-psram-cache-issue

board_build.partitions = ./board_partitions/esp32/default_16MB.csv
; board_build.partitions = ./board_partitions/esp32/default.csv


[env:mhetesp32minikit]
platform = espressif32@3.2.0
board = mhetesp32minikit
framework = ${common_env_data.framework}
platform_packages =
  ; framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#master
  framework-arduinoespressif32 @ https://github.com/paclema/arduino-esp32#lwip_enabled    ; Must use platform = espressif32@3.2.0
  toolchain-xtensa32@2.80400  ; LWIP needs toolchain-xtensa32 >= v8.4.0
board_build.mcu = esp32
board_build.f_cpu = 240000000L
monitor_speed = ${common_env_data.monitor_speed}
upload_speed = ${common_env_data.upload_speed}
upload_port = COM5
lib_deps =
  ${common_env_data.lib_deps_base}

build_flags =
  ${common_env_data.build_flags}
  -D USE_ASYNC_WEBSERVER
  ; -D CORE_DEBUG_LEVEL=5     ;To enable ESP32 core debug


[env:mhetesp32devkit]
platform = espressif32@3.2.0
board = mhetesp32devkit
framework = ${common_env_data.framework}
platform_packages =
  ; framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#master
  framework-arduinoespressif32 @ https://github.com/paclema/arduino-esp32#lwip_enabled    ; Must use platform = espressif32@3.2.0
  toolchain-xtensa32@2.80400  ; LWIP needs toolchain-xtensa32 >= v8.4.0
board_build.mcu = esp32
board_build.f_cpu = 240000000L
monitor_speed = ${common_env_data.monitor_speed}
upload_speed = ${common_env_data.upload_speed}
upload_port = COM17
monitor_port = COM17
lib_deps =
  ${common_env_data.lib_deps_base}

build_flags =
  ${common_env_data.build_flags}
  ; -D CORE_DEBUG_LEVEL=5     ;To enable ESP32 core debug


[env:az-delivery-devkit-v4]
platform = espressif32@3.2.0
board = az-delivery-devkit-v4
framework = ${common_env_data.framework}
platform_packages =
  ; framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#master
  framework-arduinoespressif32 @ https://github.com/paclema/arduino-esp32#lwip_enabled    ; Must use platform = espressif32@3.2.0
  toolchain-xtensa32@2.80400  ; LWIP needs toolchain-xtensa32 >= v8.4.0
board_build.mcu = esp32
board_build.f_cpu = 240000000L
monitor_speed = ${common_env_data.monitor_speed}
upload_speed = ${common_env_data.upload_speed}
upload_port = COM6
monitor_port = COM6
lib_deps =
  ${common_env_data.lib_deps_base}

build_flags =
  ${common_env_data.build_flags}
  -D LED_BUILTIN=-1
  ; -D CORE_DEBUG_LEVEL=5     ;To enable ESP32 core debug


[env:IoT-PostBox_v1]
platform = https://github.com/paclema/platform-espressif32.git#iot-postbox_v1_support
board = iot-postbox_v1
framework = ${common_env_data.framework}
platform_packages =
	toolchain-xtensa32s2
  framework-arduinoespressif32 @ https://github.com/paclema/arduino-esp32.git#iot-postbox_v1_board_variant

board_build.mcu = esp32s2
board_build.f_cpu = 240000000L
board_build.partitions = ./board_partitions/esp32/default_16MB.csv
monitor_speed = ${common_env_data.monitor_speed}
upload_speed = ${common_env_data.upload_speed}
; upload_port = COM17
monitor_port = COM20
lib_deps =
  ${common_env_data.lib_deps_base}

build_flags =
  ${common_env_data.build_flags}
  -D LED_BUILTIN=LDO2_EN_PIN
  ; -D CORE_DEBUG_LEVEL=5     ;To enable ESP32 core debug
  -D GPS_RX_PIN=44
  -D GPS_TX_PIN=43